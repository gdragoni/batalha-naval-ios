//
//  BatalhaVsComputadorController.m
//  Batalha Naval
//
//  Created by Gabriel A. Dragoni on 1/14/16.
//  Copyright (c) 2016 Gabriel A. Dragoni. All rights reserved.
//

#import "BatalhaVsComputadorController.h"
#import "DistribuidorController.h"
#import "BatalhaGridController.h"
#import "Soms.h"
#import "UserDefault.h"
#import "Navio.h"

@implementation BatalhaVsComputadorController{
    
    Soms            *som;
    Configuracoes   *config;
    UIBarButtonItem *myBackButton, *avancarButton;
    NSInteger       contadorParaBotao, sorteado;
    BOOL            advIntelingente;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    contadorParaBotao = 0;
    self.finalizarOutlet.hidden = YES;
    self.finalizarOutlet.userInteractionEnabled = NO;
    self.mostrarNaviosOutlet.hidden = YES;
    self.mostrarNaviosOutlet.userInteractionEnabled = NO;
    self.trocarCampoOutlet.hidden = YES;
    self.trocarCampoOutlet.userInteractionEnabled = NO;
    
    sorteado = arc4random()%2;
    self.tentExtra.text = @"";
    
    config = [UserDefault getConfiguracoes];
    som = [Soms new];
    
    [som tocarShipBell];
    
    myBackButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemStop target:self action:@selector(goBack)];
    self.navigationItem.leftBarButtonItem = myBackButton;
    
    avancarButton = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFastForward target:self action:@selector(pausarButton)];
    self.navigationItem.rightBarButtonItem = avancarButton;
    if (sorteado == 0) {
        
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"Você começa!" message:nil delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
        alert.tag = 11;
        [alert show];
    }else{
        
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"Adversário começa!" message:nil delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil];
        alert.tag = 12;
        [alert show];
          }
}

-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender{
    
    if ([segue.identifier isEqualToString:@"batalhaParaGrid"]) {
        
        BatalhaGridController *grid = [segue destinationViewController];
        self.batalhaGrid = grid;
        self.batalhaGrid.batControllerPrinc = self;
        self.batalhaGrid.arrayNaviosDoJogador = [[NSMutableArray alloc]initWithArray:self.arrayNaviosJogador];
    }
}

#pragma mark - Animar view

-(void)frotaAfundadaBatalha:(NSInteger)porcentagem{
    
    UIColor *cor;
    
    if ([self.batalhaGrid vezDeQuem] == 'A') {
        
        cor = [UIColor redColor];
    }else{
        
        cor = [UIColor greenColor];
    }
    
    self.frotaBatLabel.textColor = cor;
    self.frotaBatLabel.text = [NSString stringWithFormat:@"Destruição: %li%%", porcentagem];
    
}

-(void)atualizarLabelVez:(NSString*)vezDeQuem{
    
    if (![self.vezLabel.text isEqualToString:vezDeQuem]) {
        
        if([vezDeQuem isEqualToString:@"Vez do Jogador"]){
            
            self.vezLabel.textColor = [UIColor colorWithRed:0 green:1 blue:0.2 alpha:1];
        }else{
            
            self.vezLabel.textColor = [UIColor colorWithRed:1 green:0 blue:0.2 alpha:1];
        }
        self.vezLabel.text = vezDeQuem;
    }
    
}

-(void)mostrarTentativaExtraLabelComQuantidade:(NSInteger)qtdDeTentativas{
    
    self.tentExtra.alpha = 0;
    self.tentExtra.text = [NSString stringWithFormat:@"+%li", qtdDeTentativas];
    
    [UIView animateWithDuration:1 animations:^{
        self.tentExtra.alpha = 1;
        self.tentExtra.alpha = 0;
    }];
    
}

-(void)atualizarLabelTentativa:(NSInteger)tentativa{
    
    self.tentativaLabel.text = [NSString stringWithFormat:@"Tentativas restantes: %li", tentativa];
}

-(void)msgNaLogLabel:(NSString*)msg comNavio:(NavioTipo)tipo{
    
    if (tipo == 0) {
        
        self.logLabel.textColor = [UIColor whiteColor];
        self.logLabel.text = msg;
        self.logLabel.hidden = NO;
        self.logLabel.alpha = 0;
        [UIView animateWithDuration:3 animations:^{
            self.logLabel.alpha = 1;
            self.logLabel.alpha = 0;
        }];
    }else{
        
        switch (tipo) {
            case PortaAvioes:
                self.logLabel.textColor = [UIColor colorWithRed:0.6 green:0.5 blue:0.5 alpha:1];
                break;
            case Encouracado:
                self.logLabel.textColor = [UIColor colorWithRed:0 green:0.7 blue:0.3 alpha:1];
                break;
            case Cruiser:
                self.logLabel.textColor = [UIColor colorWithRed:0.7 green:0 blue:0.3 alpha:1];
                break;
            case Destroyer:
                self.logLabel.textColor = [UIColor colorWithRed:0.5 green:0.5 blue:0 alpha:1];
                break;
            case Submarino:
                self.logLabel.textColor = [UIColor colorWithRed:0.3 green:0.5 blue:0.6 alpha:1];
                break;
                
            default:
                break;
        }
        self.logLabel.text = msg;
        self.logLabel.hidden = NO;
        self.logLabel.alpha = 0;
        [UIView animateWithDuration:3 animations:^{
            self.logLabel.alpha = 1;
            self.logLabel.alpha = 0;
        }];
    }
}

#pragma mark - Alert view

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
        
    if (alertView.tag == 9) {
        
        if (buttonIndex == 0) {
            
            [[self navigationController] popToRootViewControllerAnimated:YES];
        }
        else{
            
            if ([self.batalhaGrid vezDeQuem] == 'A') {
                
                [self.batalhaGrid tempoParaAdvJogar];
            }
        }
    }
    
    if (alertView.tag == 11) {
        
        [self atualizarLabelVez:@"Vez do Jogador"];
        [self.batalhaGrid mudaParaCampoAdversario];
    }else if (alertView.tag == 12){
        
        [self atualizarLabelVez:@"Vez do Adversário"];
        [self.batalhaGrid mudaParaCampoJogador];
        self.navigationItem.rightBarButtonItem = avancarButton;
        [self.batalhaGrid tempoParaAdvJogar];
    }
}

#pragma mark - Actions Button

- (IBAction)trocarCampoButton:(id)sender {
    
    contadorParaBotao++;
    if (contadorParaBotao%2 != 0) {
        
        self.mostrarNaviosOutlet.hidden = NO;
        self.mostrarNaviosOutlet.userInteractionEnabled = YES;
    }else{
        
        self.mostrarNaviosOutlet.hidden = YES;
        self.mostrarNaviosOutlet.userInteractionEnabled = NO;
    }
    
    [self.mostrarNaviosOutlet setTitle: @"Mostrar Navios" forState: UIControlStateNormal];
    if (self.vezDeAlguem == 'A') {
        
        self.vezLabel.text = @"Campo do Adversário";
        self.vezLabel.font = [self.vezLabel.font fontWithSize:15];
        self.vezLabel.textColor = [UIColor colorWithRed:1 green:0 blue:0.2 alpha:1];
        [self.batalhaGrid mudaParaCampoAdversario];
        self.vezDeAlguem = 'J';
    }else if(self.vezDeAlguem == 'J'){
        
        self.vezLabel.text = @"Campo do Jogador";
        self.vezLabel.textColor = [UIColor colorWithRed:0 green:1 blue:0.2 alpha:1];
        [self.batalhaGrid mudaParaCampoJogador];
        self.vezDeAlguem = 'A';
    }
}

- (IBAction)mostrarNaviosButton:(id)sender {
    
    if ([self.mostrarNaviosOutlet.titleLabel.text isEqualToString:@"Mostrar Navios"]) {
        
        [self.mostrarNaviosOutlet setTitle: @"Esconder Navios" forState: UIControlStateNormal];
        [self.batalhaGrid mostrarNaviosDoCampo:self.vezDeAlguem];
    }else if ([self.mostrarNaviosOutlet.titleLabel.text isEqualToString:@"Esconder Navios"]){
        
        [self.mostrarNaviosOutlet setTitle: @"Mostrar Navios" forState: UIControlStateNormal];
        if (self.vezDeAlguem == 'J') {
            
            [self.batalhaGrid mudaParaCampoAdversario];
        }else{
            
            [self.batalhaGrid mudaParaCampoJogador];
        }
    }
}

- (IBAction)finalizarButton:(id)sender {
    
    [self.navigationController popToRootViewControllerAnimated:YES];
}

-(void)pausarButton{
    
    avancarButton = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemPlay target:self action:@selector(inciarButton)];
    self.navigationItem.rightBarButtonItem = avancarButton;
    [self.batalhaGrid mudarTempoParaAdvJogar];
}

-(void)inciarButton{
    
    avancarButton = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFastForward target:self action:@selector(pausarButton)];
    self.navigationItem.rightBarButtonItem = avancarButton;
    [self.batalhaGrid mudarTempoParaAdvJogar];
    
}

-(void)liberarBotoesEMudaAVez:(char)vezDeQuem{
    
    self.vezDeAlguem = vezDeQuem;
    if (self.vezDeAlguem == 'J') {
        
        self.vezLabel.text = @"Campo do Adversário";
        self.vezLabel.font = [self.vezLabel.font fontWithSize:15];
        self.vezLabel.textColor = [UIColor colorWithRed:1 green:0 blue:0.2 alpha:1];
    }else{
        
        self.vezLabel.text = @"Campo do Jogador";
        self.vezLabel.textColor = [UIColor colorWithRed:0 green:1 blue:0.2 alpha:1];
    }
    
    self.finalizarOutlet.hidden = NO;
    self.finalizarOutlet.userInteractionEnabled = YES;
    
    self.mostrarNaviosOutlet.hidden = YES;
    self.mostrarNaviosOutlet.userInteractionEnabled = NO;
    
    self.trocarCampoOutlet.hidden = NO;
    self.trocarCampoOutlet.userInteractionEnabled = YES;
    
    myBackButton.enabled = NO;
    self.logLabel.hidden = YES;
    
    self.tentativaLabel.hidden = YES;
}

-(void)mostrarEsconderBotaoPausar{
    
    if (self.finalizarOutlet.hidden) {
        
        self.navigationItem.rightBarButtonItem = avancarButton;
    }else{
        
        self.navigationItem.rightBarButtonItem = nil;
    }
}

-(void)goBack{
    
    [self.batalhaGrid.tempoParaJogar invalidate];
    self.batalhaGrid.tempoParaJogar = nil;
    UIAlertView *alertaParaVoltar = [[UIAlertView alloc]initWithTitle:@"Encerrar batalha" message:@"Tem certeza que deseja sair da batalha ?" delegate:self cancelButtonTitle:@"Sim" otherButtonTitles:@"Não", nil];
    alertaParaVoltar.tag = 9;
    [alertaParaVoltar show];
}

@end
